


ARM Macro Assembler    Page 1 


    1 00000000         ;*------------------------------------------------------
                       -------------
    2 00000000         ;* Name:     lab_4_program.s 
    3 00000000         ;* Purpose:  A sample style for lab-4
    4 00000000         ;* Term:  Winter 2024
    5 00000000         ; LUT
    6 00000000         ; R6 Permamently Occupied
    7 00000000         ; R11 Permamently Occupied
    8 00000000         ; R0 should be the delay counter, Permanently Occipied
    9 00000000         ;*------------------------------------------------------
                       -------------
   10 00000000                 THUMB                        ; Declare THUMB ins
                                                            truction set 
   11 00000000                 AREA             My_code, CODE, READONLY ; 
   12 00000000                 EXPORT           __MAIN      ; Label __MAIN is u
                                                            sed externally 
   13 00000000                 EXPORT           EINT3_IRQHandler
   14 00000000                 ENTRY
   15 00000000         
   16 00000000         __MAIN
   17 00000000         
   18 00000000         ; The following lines are similar to previous labs.
   19 00000000         ; They just turn off all LEDs 
   20 00000000 F8DF A140       LDR              R10, =LED_BASE_ADR ; R10 is a  
                                                            pointer to the base
                                                             address for the LE
                                                            Ds
   21 00000004 F04F 4330       MOV              R3, #0xB0000000 ; Turn off thre
                                                            e LEDs on port 1  
   22 00000008 F8CA 3020       STR              R3, [r10, #0x20]
   23 0000000C F04F 037C       MOV              R3, #0x0000007C
   24 00000010 F8CA 3040       STR              R3, [R10, #0x40] ; Turn off fiv
                                                            e LEDs on port 2 
   25 00000014         
   26 00000014         ; This line is very important in your main program
   27 00000014         ; Initializes R11 to a 16-bit non-zero value and NOTHING
                        else can write to R11 !!
   28 00000014 F64A 3BCD       MOV              R11, #0xABCD ; Init the random 
                                                            number generator wi
                                                            th a non-zero numbe
                                                            r
   29 00000018         ISR_RETURN
   30 00000018 F04F 0600       MOV              R6, #0      ; The return addres
                                                            s will clear any im
                                                            portant registers a
                                                            nd reset all the IO
                                                             pins again just to
                                                             be safe
   31 0000001C         
   32 0000001C 4C4A            LDR              R4, =ISER0  ; Interrupt Set-Ena
                                                            ble reg 0
   33 0000001E F44F 1800       MOV              R8, #0x200000 ; The 21th bit is
                                                             set to 1
   34 00000022 F8C4 8000       STR              R8,[R4]
   35 00000026         
   36 00000026 4C49            LDR              R4, =IO2IntEnf ; Falling Edge E
                                                            nable
   37 00000028 F44F 6880       MOV              R8, #0x400  ; bit 10 is set to 
                                                            1



ARM Macro Assembler    Page 2 


   38 0000002C F8C4 8000       STR              R8, [R4]
   39 00000030         
   40 00000030         ; ------------------------------------------------------
                       -------------------------------- 
   41 00000030 F000 F819 
                       LOOP_BLINK
                               BL               RNG         ; Get R6
   42 00000034 F44F 707A       MOV              R0,#0x3E8   ; Runs the delay fo
                                                            r 0.25 second delay
                                                            
   43 00000038 F000 F843       BL               DELAY
   44 0000003C F04F 0300       MOV              R3, #0      ; Turns ON LEDs on 
                                                            port 1  
   45 00000040 F8CA 3020       STR              R3, [R10, #0x20]
   46 00000044 F04F 0300       MOV              R3, #0
   47 00000048 F8CA 3040       STR              R3, [R10, #0x40] ; Turn ON LEDs
                                                             on port 2
   48 0000004C F44F 707A       MOV              R0,#0x3E8   ; Runs the delay fo
                                                            r 0.25 second delay
                                                            
   49 00000050 F000 F837       BL               DELAY
   50 00000054 F04F 4330       MOV              R3, #0xB0000000 ; Turn off thre
                                                            e LEDs on port 1  
   51 00000058 F8CA 3020       STR              R3, [r10, #0x20]
   52 0000005C F04F 037C       MOV              R3, #0x0000007C
   53 00000060 F8CA 3040       STR              R3, [R10, #0x40] ; Turn ON the 
                                                            left 5 LEDs on port
                                                             2
   54 00000064 E7E4            B                LOOP_BLINK
   55 00000066         ; ------------------------------------------------------
                       ---------------------------------
   56 00000066         
   57 00000066         
   58 00000066         ;
   59 00000066         ; Your main program can appear here 
   60 00000066         ;
   61 00000066         
   62 00000066         
   63 00000066         
   64 00000066         ;*------------------------------------------------------
                       ------------- 
   65 00000066         ; Subroutine RNG ... Generates a pseudo-Random Number in
                        R11 
   66 00000066         ;*------------------------------------------------------
                       ------------- 
   67 00000066         ; R11 holds a random number as per the Linear feedback s
                       hift register (Fibonacci) on WikiPedia
   68 00000066         ; R11 MUST be initialized to a non-zero 16-bit value at 
                       the start of the program
   69 00000066         ; R11 can be read anywhere in the code but must only be 
                       written to by this subroutine
   70 00000066 B53E    RNG     STMFD            R13!,{R1-R5, R14} ; Random Numb
                                                            er Generator 
   71 00000068 F04F 0515       MOV              R5, #21
   72 0000006C F40B 4100       AND              R1, R11, #0x8000
   73 00000070 F40B 5200       AND              R2, R11, #0x2000
   74 00000074 EA4F 0282       LSL              R2, #2
   75 00000078 EA81 0302       EOR              R3, R1, R2
   76 0000007C F40B 5180       AND              R1, R11, #0x1000



ARM Macro Assembler    Page 3 


   77 00000080 EA4F 01C1       LSL              R1, #3
   78 00000084 EA83 0301       EOR              R3, R3, R1
   79 00000088 F40B 6180       AND              R1, R11, #0x0400
   80 0000008C EA4F 1141       LSL              R1, #5
   81 00000090 EA83 0301       EOR              R3, R3, R1  ; The new bit to go
                                                             into the LSB is pr
                                                            esent
   82 00000094 EA4F 33D3       LSR              R3, #15
   83 00000098 EA4F 0B4B       LSL              R11, #1
   84 0000009C EA4B 0B03       ORR              R11, R11, R3
   85 000000A0         
   86 000000A0 FB9B F1F5       SDIV             R1, R11, R5 ; R1 = R11 / 21
   87 000000A4 2900            CMP              R1, #0      ; Compare quotient 
                                                            to 0
   88 000000A6 DA01            BGE              Positive
   89 000000A8 F1C1 0100       NEG              R1, R1      ; If negative, nega
                                                            te it to get abs va
                                                            lue
   90 000000AC         Positive
   91 000000AC FB01 F205       MUL              R2, R1, R5  ; R2 = abs(quotient
                                                            ) * 21
   92 000000B0 EBAB 0302       SUB              R3, R11, R2 ; R3 = R11 - R2, wh
                                                            ich is R11 mod 21
   93 000000B4 F103 0305       ADD              R3, R3, #5  ; R3 = (R11 mod 21)
                                                             + 5
   94 000000B8 F04F 040A       MOV              R4, #10     ; Move 10000 into R
                                                            4
   95 000000BC FB03 F604       MUL              R6, R3, R4  ; R6 = R3 * 10
   96 000000C0         ; instead of putting into R0, we now put into R6
   97 000000C0         
   98 000000C0         
   99 000000C0 BD3E            LDMFD            R13!,{R1-R5, R15}
  100 000000C2         
  101 000000C2         
  102 000000C2         
  103 000000C2         ;*------------------------------------------------------
                       ------------- 
  104 000000C2         ; Subroutine DELAY ... Causes a delay of 100ms * R0 time
                       s
  105 000000C2         ;*------------------------------------------------------
                       ------------- 
  106 000000C2         ;   aim for better than 10% accuracy
  107 000000C2         DELAY                                ; this delay still 
                                                            produce 100mu s del
                                                            ay
  108 000000C2 B504            STMFD            R13!,{R2, R14} ; only R2 and R1
                                                            4 preserved
  109 000000C4         Refill
  110 000000C4 B130            CBZ              R0, exitDelay
  111 000000C6 F1A0 0001       SUB              R0, #1
  112 000000CA         ;MOV   R2, #1
  113 000000CA F04F 0285       MOV              R2, #0x085
  114 000000CE         LOOP
  115 000000CE 3A01            SUBS             R2, #1
  116 000000D0 D1FD            BNE              LOOP
  117 000000D2 D0F7            BEQ              Refill
  118 000000D4         
  119 000000D4         
  120 000000D4 BD04    exitDelay



ARM Macro Assembler    Page 4 


                               LDMFD            R13!,{R2, R15}
  121 000000D6         
  122 000000D6         ; The Interrupt Service Routine MUST be in the startup f
                       ile for simulation 
  123 000000D6         ;   to work correctly.  Add it where there is the label 
                       "EINT3_IRQHandler
  124 000000D6         ;
  125 000000D6         ;*------------------------------------------------------
                       ------------- 
  126 000000D6         ; Interrupt Service Routine (ISR) for EINT3_IRQHandler 
  127 000000D6         ;*------------------------------------------------------
                       ------------- 
  128 000000D6         ; This ISR handles the interrupt triggered when the INT0
                        push-button is pressed 
  129 000000D6         ; with the assumption that the interrupt activation is d
                       one in the main program
  130 000000D6         EINT3_IRQHandler
  131 000000D6 E92D 41B6       STMFD            R13!,{R1, R2, R4, R5, R7, R8, R
14} 
                                                            ; Use this command 
                                                            if you need it
  132 000000DA         
  133 000000DA         COUNT_DOWN
  134 000000DA F04F 0100       MOV              R1,#0x0     ; clear every regis
                                                            ters
  135 000000DE F04F 0200       MOV              R2,#0x0
  136 000000E2 F04F 0500       MOV              R5,#0x0
  137 000000E6         ;DISPLAY_NUM
  138 000000E6 F366 0507       BFI              R5, R6, #0, #8 ; Replace bit 0 
                                                            to bit 7 (8 bits) o
                                                            f R5 with
  139 000000EA         ; bit 0 to bit 7 from R3
  140 000000EA F365 0204       BFI              R2, R5, #0, #5 ;P2 ORDER: 2,3,4
                                                            ,5,6. Take the firs
                                                            t 5 bits and store 
                                                            it in R2
  141 000000EE         
  142 000000EE EA4F 1555       LSR              R5, R5, #5  ;shifting the 5 bit
                                                            s that are put into
                                                             R2
  143 000000F2 F365 0102       BFI              R1, R5, #0, #3 ;P1 ORDER: 28,29
                                                            ,31. Take the MSB 3
                                                             bits and store it 
                                                            in R1
  144 000000F6         
  145 000000F6         
  146 000000F6 FA91 F1A1       RBIT             R1, R1      ; Reverse the order
                                                             of bits in R1 (P1 
                                                            ORDER currently: 31
                                                            ,30,29)
  147 000000FA FA92 F2A2       RBIT             R2, R2      ; Reverse the order
                                                             of the bits in R2 
                                                            (P2 ORDER: 6,5,4,3,
                                                            2,1)
  148 000000FE         
  149 000000FE         
  150 000000FE EA4F 0151       LSR              R1, R1, #1  ; Shift R1 bits to 
                                                            the right by 1 bit 
                                                            (31st bit is now at



ARM Macro Assembler    Page 5 


                                                             30th bit location)
                                                            
  151 00000102 F101 4180       ADD              R1,#0x40000000 ; ADDS 1 to the 
                                                            30th bit to brings 
                                                            the ("31st" bit to 
                                                            the 31st location)
  152 00000106 EA4F 6252       LSR              R2, R2, #25 ; Shift R2 bits to 
                                                            the right by 26 bit
                                                            s
  153 0000010A         
  154 0000010A         ;EOR means if the number is the same -> 0, if not the sa
                       me -> 1
  155 0000010A F081 4130       EOR              R1,#0xB0000000
  156 0000010E F082 027C       EOR              R2,#0x07C   ;0 becomes 1 and 1 
                                                            becomes 0 for bit 6
                                                            -2:    Register for
                                                             Port 2 complete
  157 00000112         
  158 00000112         
  159 00000112 F8CA 1020       STR              R1, [R10, #0x20]
  160 00000116 F8CA 2040       STR              R2, [R10, #0x40]
  161 0000011A         
  162 0000011A         ; Internal Delay    
  163 0000011A F242 7010       MOV              R0, #0x2710
  164 0000011E         Refill_in
  165 0000011E B138            CBZ              R0, exitDelay_in
  166 00000120 F1A0 0001       SUB              R0, #1
  167 00000124 F04F 0885       MOV              R8, #0x085
  168 00000128         LOOP_in
  169 00000128 F1B8 0801       SUBS             R8, #1
  170 0000012C D1FC            BNE              LOOP_in
  171 0000012E D0F6            BEQ              Refill_in
  172 00000130         exitDelay_in
  173 00000130         ; Decrement R6
  174 00000130 F1A6 060A       SUB              R6, #10
  175 00000134 2E00            CMP              R6, #0
  176 00000136 D8D0            BHI              COUNT_DOWN  ; Branch on Lower t
                                                            han or Same
  177 00000138         
  178 00000138         
  179 00000138 4F05            LDR              R7, =IO2IntClr
  180 0000013A F44F 6480       MOV              R4, #0x400  ; bit 10 is set to 
                                                            1
  181 0000013E 603C            STR              R4, [R7]
  182 00000140         ;B  LOOP_BLINK
  183 00000140 E8BD 81B6       LDMFD            R13!,{R1, R2, R4, R5, R7, R8, R
15} 
                                                            ; Use this command 
                                                            if you used STMFD (
                                                            otherwise use BX LR
                                                            ) 
  184 00000144         
  185 00000144         
  186 00000144         ;*------------------------------------------------------
                       -------------
  187 00000144         ; Below is a list of useful registers with their respect
                       ive memory addresses.
  188 00000144         ;*------------------------------------------------------
                       ------------- 



ARM Macro Assembler    Page 6 


  189 00000144 2009C000 
                       LED_BASE_ADR
                               EQU              0x2009c000  ; Base address of t
                                                            he memory that cont
                                                            rols the LEDs 
  190 00000144 4002C00C 
                       PINSEL3 EQU              0x4002C00C  ; Pin Select Regist
                                                            er 3 for P1[31:16]
  191 00000144 4002C010 
                       PINSEL4 EQU              0x4002C010  ; Pin Select Regist
                                                            er 4 for P2[15:0]
  192 00000144 2009C020 
                       FIO1DIR EQU              0x2009C020  ; Fast Input Output
                                                             Direction Register
                                                             for Port 1 
  193 00000144 2009C040 
                       FIO2DIR EQU              0x2009C040  ; Fast Input Output
                                                             Direction Register
                                                             for Port 2 
  194 00000144 2009C038 
                       FIO1SET EQU              0x2009C038  ; Fast Input Output
                                                             Set Register for P
                                                            ort 1 
  195 00000144 2009C058 
                       FIO2SET EQU              0x2009C058  ; Fast Input Output
                                                             Set Register for P
                                                            ort 2 
  196 00000144 2009C03C 
                       FIO1CLR EQU              0x2009C03C  ; Fast Input Output
                                                             Clear Register for
                                                             Port 1 
  197 00000144 2009C05C 
                       FIO2CLR EQU              0x2009C05C  ; Fast Input Output
                                                             Clear Register for
                                                             Port 2 
  198 00000144 400280B4 
                       IO2IntEnf
                               EQU              0x400280B4  ; GPIO Interrupt En
                                                            able for port 2 Fal
                                                            ling Edge 
  199 00000144 E000E100 
                       ISER0   EQU              0xE000E100  ; Interrupt Set-Ena
                                                            ble Register 0 
  200 00000144 400280AC 
                       IO2IntClr
                               EQU              0x400280AC
  201 00000144                 ALIGN
  202 00000144         
  203 00000144                 END
              2009C000 
              E000E100 
              400280B4 
              400280AC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\lab_4_program.d -o.\objects\lab_4_program.o -I.\RTE\_Tar
get_1 -IC:\Keil_v5\Arm\Pack\Keil\LPC1700_DFP\2.6.0\Device\Include -IC:\Keil_v5\
ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SE
TA 529" --predefine="LPC175x_6x SETA 1" --list=.\listings\lab_4_program.lst lab
_4_program.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

COUNT_DOWN 000000DA

Symbol: COUNT_DOWN
   Definitions
      At line 133 in file lab_4_program.s
   Uses
      At line 176 in file lab_4_program.s
Comment: COUNT_DOWN used once
DELAY 000000C2

Symbol: DELAY
   Definitions
      At line 107 in file lab_4_program.s
   Uses
      At line 43 in file lab_4_program.s
      At line 49 in file lab_4_program.s

EINT3_IRQHandler 000000D6

Symbol: EINT3_IRQHandler
   Definitions
      At line 130 in file lab_4_program.s
   Uses
      At line 13 in file lab_4_program.s
Comment: EINT3_IRQHandler used once
ISR_RETURN 00000018

Symbol: ISR_RETURN
   Definitions
      At line 29 in file lab_4_program.s
   Uses
      None
Comment: ISR_RETURN unused
LOOP 000000CE

Symbol: LOOP
   Definitions
      At line 114 in file lab_4_program.s
   Uses
      At line 116 in file lab_4_program.s
Comment: LOOP used once
LOOP_BLINK 00000030

Symbol: LOOP_BLINK
   Definitions
      At line 41 in file lab_4_program.s
   Uses
      At line 54 in file lab_4_program.s
Comment: LOOP_BLINK used once
LOOP_in 00000128

Symbol: LOOP_in
   Definitions
      At line 168 in file lab_4_program.s
   Uses
      At line 170 in file lab_4_program.s
Comment: LOOP_in used once
My_code 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: My_code
   Definitions
      At line 11 in file lab_4_program.s
   Uses
      None
Comment: My_code unused
Positive 000000AC

Symbol: Positive
   Definitions
      At line 90 in file lab_4_program.s
   Uses
      At line 88 in file lab_4_program.s
Comment: Positive used once
RNG 00000066

Symbol: RNG
   Definitions
      At line 70 in file lab_4_program.s
   Uses
      At line 41 in file lab_4_program.s
Comment: RNG used once
Refill 000000C4

Symbol: Refill
   Definitions
      At line 109 in file lab_4_program.s
   Uses
      At line 117 in file lab_4_program.s
Comment: Refill used once
Refill_in 0000011E

Symbol: Refill_in
   Definitions
      At line 164 in file lab_4_program.s
   Uses
      At line 171 in file lab_4_program.s
Comment: Refill_in used once
__MAIN 00000000

Symbol: __MAIN
   Definitions
      At line 16 in file lab_4_program.s
   Uses
      At line 12 in file lab_4_program.s
Comment: __MAIN used once
exitDelay 000000D4

Symbol: exitDelay
   Definitions
      At line 120 in file lab_4_program.s
   Uses
      At line 110 in file lab_4_program.s
Comment: exitDelay used once
exitDelay_in 00000130

Symbol: exitDelay_in
   Definitions
      At line 172 in file lab_4_program.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 165 in file lab_4_program.s
Comment: exitDelay_in used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FIO1CLR 2009C03C

Symbol: FIO1CLR
   Definitions
      At line 196 in file lab_4_program.s
   Uses
      None
Comment: FIO1CLR unused
FIO1DIR 2009C020

Symbol: FIO1DIR
   Definitions
      At line 192 in file lab_4_program.s
   Uses
      None
Comment: FIO1DIR unused
FIO1SET 2009C038

Symbol: FIO1SET
   Definitions
      At line 194 in file lab_4_program.s
   Uses
      None
Comment: FIO1SET unused
FIO2CLR 2009C05C

Symbol: FIO2CLR
   Definitions
      At line 197 in file lab_4_program.s
   Uses
      None
Comment: FIO2CLR unused
FIO2DIR 2009C040

Symbol: FIO2DIR
   Definitions
      At line 193 in file lab_4_program.s
   Uses
      None
Comment: FIO2DIR unused
FIO2SET 2009C058

Symbol: FIO2SET
   Definitions
      At line 195 in file lab_4_program.s
   Uses
      None
Comment: FIO2SET unused
IO2IntClr 400280AC

Symbol: IO2IntClr
   Definitions
      At line 200 in file lab_4_program.s
   Uses
      At line 179 in file lab_4_program.s
Comment: IO2IntClr used once
IO2IntEnf 400280B4

Symbol: IO2IntEnf



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 198 in file lab_4_program.s
   Uses
      At line 36 in file lab_4_program.s
Comment: IO2IntEnf used once
ISER0 E000E100

Symbol: ISER0
   Definitions
      At line 199 in file lab_4_program.s
   Uses
      At line 32 in file lab_4_program.s
Comment: ISER0 used once
LED_BASE_ADR 2009C000

Symbol: LED_BASE_ADR
   Definitions
      At line 189 in file lab_4_program.s
   Uses
      At line 20 in file lab_4_program.s
Comment: LED_BASE_ADR used once
PINSEL3 4002C00C

Symbol: PINSEL3
   Definitions
      At line 190 in file lab_4_program.s
   Uses
      None
Comment: PINSEL3 unused
PINSEL4 4002C010

Symbol: PINSEL4
   Definitions
      At line 191 in file lab_4_program.s
   Uses
      None
Comment: PINSEL4 unused
12 symbols
362 symbols in table
